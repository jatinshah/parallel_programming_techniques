head	1.3;
access;
symbols;
locks
	jds58:1.3; strict;
comment	@ * @;


1.3
date	2000.09.15.18.46.15;	author jds58;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.13.20.54.02;	author jds58;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.13.18.55.47;	author jds58;	state Exp;
branches;
next	;


desc
@First Draft
Not Working
@


1.3
log
@Working..Single Barrier
@
text
@#include "main.h"

void barrier_init(barrier_t *b, int nthrs){
	b->c = new pthread_cond_t;
	b->m = new pthread_mutex_t;
	pthread_cond_init(b->c, NULL);
	pthread_mutex_init(b->m, NULL);
	if(nthrs > 0) 
		b->nthreads=nthrs;
	else{
		errno=EINVAL;
		perror("barrier_init");
	}
		
}

void barrier(barrier_t *b){
	pthread_mutex_lock(b->m);
	b->nthreads--;
	if(b->nthreads==0){
		pthread_cond_broadcast(b->c);
		pthread_mutex_unlock(b->m);
	}
	else{
		pthread_cond_wait(b->c,b->m);
		pthread_mutex_unlock(b->m);
	}
}

void barrier_destroy(barrier_t *b){
	pthread_cond_destroy(b->c);
	pthread_mutex_destroy(b->m);
	delete b->c;
	delete b->m;
}
@


1.2
log
@*** empty log message ***
@
text
@d26 1
@


1.1
log
@Initial revision
@
text
@d4 4
a7 2
	pthread_cond_init(&(b->c),NULL);
	pthread_mutex_init(&(b->m), NULL);
d18 1
a18 1
	pthread_mutex_lock(&(b->m));
d20 7
a26 5
	if(!b->nthreads)
		pthread_cond_broadcast(&(b->c));
	else
		pthread_cond_wait(&(b->c),&(b->m));
	
d30 4
a33 2
	pthread_cond_destroy(&(b->c));
	pthread_mutex_destroy(&(b->m));
@
